apiVersion: apps/v1
kind: Deployment
metadata:
  name: image-analyzer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: image-analyzer
  template:
    metadata:
      labels:
        app: image-analyzer
    spec:
      containers:
        - name: image-analyzer
          image: giovaz94/mail-pipeline-general
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: MCL
              value: "231"
            - name: REDIS_HOST
              value: "redis-service"
            - name: SERVICE_NAME
              value: "image-analyzer"
            - name: PORT
              value: "80"
            - name: MAX_SIZE
              value: "800"
            - name: MESSAGE_ANALYZER
              value: "http://message-analyzer-service/request"
            - name: MAX_CONNECTIONS
              value: "70"
            - name: PIPELINE_COUNT
              value: "1"
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: image-analyzer-service
  annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "80"
      prometheus.io/path: "/metrics"   # optional, defaults to /metrics
spec:
  selector:
    app: image-analyzer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: image-analyzer-service
spec:
  host: image-analyzer-service
  trafficPolicy:
    loadBalancer:
      simple: LEAST_REQUEST
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: image-analyzer-service
spec:
  hosts:
    - image-analyzer-service
  http:
    - route:
        - destination:
            host: image-analyzer-service
